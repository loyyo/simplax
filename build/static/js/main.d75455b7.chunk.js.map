{"version":3,"sources":["components/layout/Header.js","components/Weather/Time.js","components/Weather/Quotes.js","components/Weather/Weather.js","components/Calculators/BodyFat.js","components/layout/Main.js","App.js","index.js"],"names":["Header","loggedInDefault","className","src","height","alt","Time","useState","Date","time","setTime","timeString","toLocaleTimeString","currentTimeInSeconds","getHours","getMinutes","getSeconds","useEffect","outline","document","querySelector","outlineLength","getTotalLength","progress","style","strokeDashoffset","strokeDasharray","setInterval","Quotes","text","setText","author","setAuthor","quotesList","setQuotesList","fetch","method","mode","then","res","json","result","onClick","index","Math","floor","random","length","api","process","Weather","query","setQuery","weather","setWeather","today","toDateString","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","getCity","coordinates","lat","lng","town","citySearch","address","toString","navigator","geolocation","getCurrentPosition","pos","crd","coords","latitude","longitude","err","console","warn","code","message","enableHighAccuracy","timeout","maximumAge","main","name","sys","country","round","temp","width","viewBox","fill","xmlns","cx","cy","r","stroke","strokeWidth","id","BodyFat","for","Main","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d75455b7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = ({ loggedInDefault = false }) => {\r\n\t// const [loggedIn, setLoggedIn] = useState(loggedInDefault);\r\n\r\n\t// // TODO: LOGIN/SIGNUP/LOGOUT FUNCTIONS\r\n\t// const logInPopup = () => {\r\n\t// \tsetLoggedIn(!loggedIn);\r\n\t// \tconsole.log('LogIn!');\r\n\t// };\r\n\r\n\t// const signUpPopup = () => {\r\n\t// \tconsole.log('SignUp!');\r\n\t// };\r\n\r\n\t// const logOutPopup = () => {\r\n\t// \tsetLoggedIn(!loggedIn);\r\n\t// \tconsole.log('LogOut!');\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<div className='header'>\r\n\t\t\t<nav className='navbar navbar-expand-lg navbar-light'>\r\n\t\t\t\t<div className='navbar-brand'>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc='/Simplax.png'\r\n\t\t\t\t\t\theight='100'\r\n\t\t\t\t\t\tclassName='d-inline-block align-top'\r\n\t\t\t\t\t\talt='simplax_logo'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n\t\t\t\t\t<ul className='navbar-nav'> */}\r\n\t\t\t\t{/* TODO: DARK MODE BUTTON */}\r\n\t\t\t\t{/* <li className='nav-item align-middle mt-3 mr-5'>\r\n\t\t\t\t\t\t\t<button type='button'>(⌐■_■)</button>\r\n\t\t\t\t\t\t</li> */}\r\n\t\t\t\t{/* TODO: ADD LOG IN & SIGN UP & LOG OUT */}\r\n\t\t\t\t{/* <div style={{ display: loggedIn ? 'none' : 'block' }}>\r\n\t\t\t\t\t\t\t<li className='nav-item d-inline-block'>\r\n\t\t\t\t\t\t\t\t<button type='button' onClick={() => logInPopup()} onKeyDown={() => logInPopup()}>\r\n\t\t\t\t\t\t\t\t\tLog In\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className='nav-item d-inline-block mt-3'>\r\n\t\t\t\t\t\t\t\t<button type='button' onClick={() => signUpPopup()} onKeyDown={() => signUpPopup()}>\r\n\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style={{ display: loggedIn ? 'block' : 'none' }}>\r\n\t\t\t\t\t\t\t<li className='nav-item d-inline-block mt-3'>\r\n\t\t\t\t\t\t\t\t<button type='button' onClick={() => logOutPopup()} onKeyDown={() => logOutPopup()}>\r\n\t\t\t\t\t\t\t\t\tLog Out\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div> */}\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst Time = () => {\r\n\tconst [time, setTime] = useState(new Date());\r\n\tconst timeString = time.toLocaleTimeString();\r\n\tlet hours = time.getHours() * 60 * 60;\r\n\tlet minutes = time.getMinutes() * 60;\r\n\tlet seconds = time.getSeconds();\r\n\tlet currentTimeInSeconds = hours + minutes + seconds;\r\n\tconst halfDay = 43200;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst outline = document.querySelector('.moving-outline circle');\r\n\t\tconst outlineLength = outline.getTotalLength();\r\n\t\tlet progress = outlineLength - (currentTimeInSeconds / halfDay) * outlineLength;\r\n\t\toutline.style.strokeDashoffset = progress;\r\n\t\toutline.style.strokeDasharray = outlineLength;\r\n\t}, [currentTimeInSeconds]);\r\n\r\n\tconst updateTime = () => {\r\n\t\tsetInterval(() => {\r\n\t\t\tsetTime(new Date());\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='time'>\r\n\t\t\t<h2>{timeString}</h2>\r\n\t\t\t{updateTime()}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Time;\r\n","import React, { useState } from 'react';\r\n\r\nconst api = 'https://type.fit/api/quotes';\r\n\r\nconst Quotes = () => {\r\n\tconst [text, setText] = useState('');\r\n\tconst [author, setAuthor] = useState('');\r\n\tconst [quotesList, setQuotesList] = useState({});\r\n\r\n\tconst getQuotesList = () => {\r\n\t\tfetch(api, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\tmode: 'cors',\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tsetQuotesList(result);\r\n\t\t\t});\r\n\t};\r\n\tgetQuotesList();\r\n\r\n\tconst randomQuote = () => {\r\n\t\tconst index = Math.floor(Math.random() * quotesList.length);\r\n\t\tsetText(`\"${quotesList[index].text}\"`);\r\n\t\tsetAuthor(quotesList[index].author !== null ? `- ${quotesList[index].author}` : '- Unknown');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='quote-machine'>\r\n\t\t\t<div className='text-quote'>{text}</div>\r\n\t\t\t<div className='author-quote'>{author}</div>\r\n\t\t\t<button onClick={randomQuote}>Get Quote</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Quotes;\r\n","import React, { useState } from 'react';\r\nimport Time from './Time';\r\nimport Quotes from './Quotes';\r\n\r\nconst api = {\r\n\tweather: process.env.REACT_APP_WEATHER_API,\r\n\tcity: process.env.REACT_APP_CITY_API,\r\n};\r\n\r\nconst Weather = () => {\r\n\tconst [query, setQuery] = useState('');\r\n\tconst [weather, setWeather] = useState({});\r\n\t// const [city, setCity] = useState('');\r\n\r\n\tconst search = (evt) => {\r\n\t\tif (evt.key === 'Enter') {\r\n\t\t\tfetch(\r\n\t\t\t\t`https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&APPID=${api.weather}`\r\n\t\t\t)\r\n\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t.then((result) => {\r\n\t\t\t\t\tsetWeather(result);\r\n\t\t\t\t\tsetQuery('');\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst checkLocalization = () => {\r\n\t\tvar options = {\r\n\t\t\tenableHighAccuracy: true,\r\n\t\t\ttimeout: 5000,\r\n\t\t\tmaximumAge: 0,\r\n\t\t};\r\n\r\n\t\tconst citySearch = (town) => {\r\n\t\t\tfetch(\r\n\t\t\t\t`https://api.openweathermap.org/data/2.5/weather?q=${town}&units=metric&APPID=${api.weather}`\r\n\t\t\t)\r\n\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t.then((result) => {\r\n\t\t\t\t\tsetWeather(result);\r\n\t\t\t\t\tsetQuery('');\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\tfunction getCity(coordinates) {\r\n\t\t\tvar lat = coordinates[0];\r\n\t\t\tvar lng = coordinates[1];\r\n\r\n\t\t\tfetch(\r\n\t\t\t\t`https://us1.locationiq.com/v1/reverse.php?key=${api.city}&lat=${lat}&lon=${lng}&format=json`\r\n\t\t\t)\r\n\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t.then((result) => {\r\n\t\t\t\t\tvar town = result.address.town.toString();\r\n\t\t\t\t\tcitySearch(town);\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction success(pos) {\r\n\t\t\tvar crd = pos.coords;\r\n\t\t\tvar lat = crd.latitude.toString();\r\n\t\t\tvar lng = crd.longitude.toString();\r\n\t\t\tvar coordinates = [lat, lng];\r\n\t\t\tgetCity(coordinates);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfunction error(err) {\r\n\t\t\tconsole.warn(`ERROR(${err.code}): ${err.message}`);\r\n\t\t}\r\n\r\n\t\tnavigator.geolocation.getCurrentPosition(success, error, options);\r\n\t};\r\n\r\n\tlet today = new Date().toDateString();\r\n\treturn (\r\n\t\t<div className='weather-box'>\r\n\t\t\t<div className='weather'>\r\n\t\t\t\t<div>Type your city here:</div>\r\n\t\t\t\t<div className='search-box-weather'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tclassName='search-bar-weather'\r\n\t\t\t\t\t\tplaceholder='Search...'\r\n\t\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\r\n\t\t\t\t\t\tvalue={query}\r\n\t\t\t\t\t\tonKeyPress={search}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button onClick={checkLocalization}>Your localization</button>\r\n\t\t\t\t{typeof weather.main != 'undefined' ? (\r\n\t\t\t\t\t<div className=''>\r\n\t\t\t\t\t\t<div className='location-box'>\r\n\t\t\t\t\t\t\t<div className='location'>\r\n\t\t\t\t\t\t\t\t{weather.name}, {weather.sys.country}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='date'>{today}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='weather-box'>\r\n\t\t\t\t\t\t\t<div className='temperature'>{Math.round(weather.main.temp)}°C</div>\r\n\t\t\t\t\t\t\t<div className='location-weather'>{weather.weather[0].main}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t''\r\n\t\t\t\t)}\r\n\t\t\t\t<div className='time-circle'>\r\n\t\t\t\t\t<svg\r\n\t\t\t\t\t\tclassName='track-outline'\r\n\t\t\t\t\t\twidth='200'\r\n\t\t\t\t\t\theight='200'\r\n\t\t\t\t\t\tviewBox='0 0 200 200'\r\n\t\t\t\t\t\tfill='none'\r\n\t\t\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<circle cx='100' cy='100' r='90' stroke='#cccccc' strokeWidth='10' />\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t\t<svg\r\n\t\t\t\t\t\tclassName='moving-outline'\r\n\t\t\t\t\t\twidth='200'\r\n\t\t\t\t\t\theight='200'\r\n\t\t\t\t\t\tviewBox='0 0 200 200'\r\n\t\t\t\t\t\tfill='none'\r\n\t\t\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<circle id='circle' cx='100' cy='100' r='90' stroke='#018EBA' strokeWidth='10' />\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t\t<Time />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Quotes />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Weather;\r\n","import React from 'react';\r\n\r\nconst BodyFat = () => {\r\n\treturn (\r\n\t\t<div className='body-fat'>\r\n\t\t\t<form>\r\n\t\t\t\t<div className='gender'>\r\n\t\t\t\t\t<div>Gender:</div>\r\n\t\t\t\t\t<input type='radio' id='male' name='gender' value='male' />\r\n\t\t\t\t\t<label for='male'>Male</label>\r\n\t\t\t\t\t<input type='radio' id='female' name='gender' value='female' />\r\n\t\t\t\t\t<label for='female'>Female</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='age'>\r\n\t\t\t\t\t<div>Age:</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tid='age'\r\n\t\t\t\t\t\tname='age'\r\n\t\t\t\t\t\tplaceholder='                            years'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='weight'>\r\n\t\t\t\t\t<div>Weight:</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tid='weight'\r\n\t\t\t\t\t\tname='weight'\r\n\t\t\t\t\t\tplaceholder='                               kg'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='height'>\r\n\t\t\t\t\t<div>Height:</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tid='height'\r\n\t\t\t\t\t\tname='height'\r\n\t\t\t\t\t\tplaceholder='                               cm'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='neck'>\r\n\t\t\t\t\t<div>Neck:</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tid='neck'\r\n\t\t\t\t\t\tname='neck'\r\n\t\t\t\t\t\tplaceholder='                               cm'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='waist'>\r\n\t\t\t\t\t<div>Waist:</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tid='waist'\r\n\t\t\t\t\t\tname='waist'\r\n\t\t\t\t\t\tplaceholder='                               cm'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BodyFat;\r\n","import React from 'react';\r\nimport Weather from '../Weather/Weather';\r\nimport BodyFat from '../Calculators/BodyFat';\r\n// import Todos from '../Todos/Todos';\r\n// import Budget from '../Calculators/Budget';\r\n// import Calorie from '../Calculators/Calorie';\r\n// import Interest from '../Calculators/Interest';\r\n\r\nconst Main = () => {\r\n\treturn (\r\n\t\t<section className='main'>\r\n\t\t\t<Weather />\r\n\t\t\t<BodyFat />\r\n\t\t\t{/* <Budget /> */}\r\n\t\t\t{/* <Calorie /> */}\r\n\t\t\t{/* <Interest /> */}\r\n\t\t\t{/* <Todos /> */}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport Header from './components/layout/Header';\nimport Main from './components/layout/Main';\n\nconst App = () => {\n\treturn (\n\t\t<main>\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<Main />\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}